{"version":3,"file":"commands.min.js","sources":["../src/commands.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * Commands helper for the Moodle tiny_cloze plugin.\n *\n * @module      tiny_cloze\n * @copyright   2023 MoodleDACH\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {getLanguageList, showAllLanguages} from './options';\nimport {component} from './common';\nimport {get_strings as getStrings} from 'core/str';\n\n/**\n * Get the setup function for the button and the menu entry.\n *\n * This is performed in an async function which ultimately returns the registration function as the\n * Tiny.AddOnManager.Add() function does not support async functions.\n *\n * @returns {function} The registration function to call within the Plugin.add function.\n */\nexport const getSetup = async() => {\n    const [\n        buttonText,\n        tooltip,\n    ] = await getStrings(['multilang2:language', 'multilang2:desc'].map((key) => ({key, component})));\n\n    return (editor) => {\n\n        const languageList = getLanguageList(editor);\n        // If there is just one language, we don't need the plugin.\n        if (languageList.length < 2) {\n            return;\n        }\n\n        editor.ui.registry.addToggleButton(component, {\n            icon: 'language',\n            tooltip: tooltip,\n        });\n\n        editor.on('init', () => {\n            onInit(editor);\n        });\n    };\n};\n"],"names":["async","buttonText","tooltip","map","key","component","editor","length","ui","registry","addToggleButton","icon","on","onInit"],"mappings":"wNAmCwBA,gBAEhBC,WACAC,eACM,oBAAW,CAAC,sBAAuB,mBAAmBC,KAAKC,OAAUA,IAAAA,IAAKC,UAAAA,8BAE5EC,UAEiB,4BAAgBA,QAEpBC,OAAS,IAI1BD,OAAOE,GAAGC,SAASC,gBAAgBL,kBAAW,CAC1CM,KAAM,WACNT,QAASA,UAGbI,OAAOM,GAAG,QAAQ,KACdC,OAAOP"}